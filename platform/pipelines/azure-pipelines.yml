trigger:
  - develop

variables:
  buildAgents: 'LocalPool'
  environment: dev
  templateFile: deployinfra.bicep
  serviceConnection: tetris-sp-${{ variables.environment }}
  resourceGroup: platform-tetris-${{ variables.environment }}
  storageAccountName: ${{ variables.resourceGroup }}-stract
  storageAccountSku: Standard_LRS
  storageAccountTier: Hot
  webAppName: ${{ variables.resourceGroup }}-webapp
  webAppSku: F1
  webAppSkuCapacity: 1

stages:
- stage: Linting
  displayName: Linting
  pool: ${{ variables.buildAgents }}
  jobs:
  - job: PreCommitLinting
    displayName: Pre-Commit Linting
    steps:
      - checkout: self 
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.9'
          addToPath: true
          architecture: 'x64'
      - task: Bash@3
        displayName: 'Pre-Commit Linting'
        continueOnError: true
        inputs:
          targetType: 'inline'
          script: |
            set -eou pipefail
            trap exit 1 ERR
            python -m pip install pre-commit
            pre-commit install
            pre-commit run --all-files
          workingDirectory: 'platform'

- stage: DeployInfra
  dependsOn: Linting
  jobs:     
  - deployment: Infra
    environment: ${{ variables.environment }}
    pool: ${{ variables.buildAgents }}
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
          - task: AzureCLI@2
            displayName: Deploy
            inputs:
              azureSubscription: ${{ variables.serviceConnection }}
              failOnStandardError: true
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                if [[ $(az group exists -g ${{ variables.resourceGroup }}) == false ]]; then
                  az group create --name ${{ variables.resourceGroup }} --location uksouth
                fi

                OUTPUT=$(az deployment group create \
                  --resource-group ${{ variables.resourceGroup }} \
                  --template-file ${{ variables.templateFile }} \
                  --parameters ${{ variables.storageAccountName }} ${{ variables.storageAccountSku }} ${{ variables.storageAccountTier }} \
                    ${{ variables.webAppName }} ${{ variables.webAppSku }} ${{ variables.webAppSkuCapacity }} \
                  --query properties.outputs
                )
                echo "##vso[task.setvariable variable=DEPLOYOUTPUT}]"$OUTPUT
              workingDirectory: 'platform/infra'
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.9'
              addToPath: true
              architecture: 'x64'
          - task: AzureCLI@2
            displayName: 'Test Infra'
            inputs:
              azureSubscription: ${{ variables.servicePrincipal }}
              scriptLocation: inlineScript
              inlineScript: |
                set -eou pipefail
                trap exit 1 ERR
                python3.9 -m venv venv
                venv/bin/pip install --upgrade pip setuptools wheel
                source venv/bin/activate
                pip install -r requirements.txt
                pytest -o junit_family=xunit2 --junitxml=test-infra.xml
                deactivate
                rm -rf venv
              workingDirectory: 'platform/infra/tests'
            env:
              DEPLOYOUTPUT: $(DEPLOYOUTPUT)
            continueOnError: true
          - task: PublishTestResults@2
            displayName: 'Publish Test results'
            inputs:
              testResultsFiles: '**/*.xml'
              searchFolder: 'platform/infra/tests'